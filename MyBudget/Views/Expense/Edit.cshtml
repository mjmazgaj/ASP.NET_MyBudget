@model MyBudget.Models.Expense

@{
    ViewData["Title"] = "Edit";

}

<h1>Edytuj</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="NameExp" class="control-label"></label>
                <input asp-for="NameExp" class="form-control" />
                <span asp-validation-for="NameExp" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ValueExp" class="control-label"></label>
                <input asp-for="ValueExp" class="form-control" />
                <span asp-validation-for="ValueExp" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DescriptionExp" class="control-label"></label>
                <textarea asp-for="DescriptionExp" class="form-control" wrap="soft" rows="5"></textarea>
                <span asp-validation-for="DescriptionExp" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div>
                    @Html.DropDownList("Categories", (IEnumerable<SelectListItem>)ViewData["Categories"], new { @class = "btn btn-secondary dropdown-toggle" })
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Zapisz" class="btn btn-outline-secondary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-outline-secondary">Wróć do listy wydatków</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
